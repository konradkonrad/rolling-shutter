syntax = "proto3";
package p2pmsg;

import "google/protobuf/any.proto";

option go_package = "./;p2pmsg";


message DecryptionTrigger {
    uint64 instanceID = 1;
    bytes epochID = 2;
    uint64 blockNumber = 3;
    bytes transactionsHash = 4;
    bytes signature = 5;
}

// TODO: replace keyper index by signature
message DecryptionKeyShare {
    uint64 instanceID = 1;
    uint64 eon = 4;
    bytes epochID = 2;
    uint64 keyperIndex = 5;
    bytes share = 6;
}

message DecryptionKey {
    uint64 instanceID = 1;
    uint64 eon = 2;
    bytes epochID = 3;
    bytes key = 4;
}

// EonPublicKey is sent by the keypers to publish the EonPublicKey for a certain
// eon.  For those that observe it, e.g. the collator, it's a candidate until
// the observer has seen at least threshold messages.
message EonPublicKey {
    uint64 instanceID = 1;
    bytes publicKey= 2;
    uint64 activationBlock = 3;
    uint64 keyperConfigIndex = 6;
    uint64 eon = 7;
    bytes signature = 5;
}


message TraceContext {
    bytes traceID = 1;
    bytes spanID = 2;
    bytes traceFlags = 3;
    string traceState = 4;
}

message Envelope {
    string version = 1 ;
    google.protobuf.Any message = 2;
    optional TraceContext trace = 3;
}
