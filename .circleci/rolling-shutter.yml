commands:
  install-asdf:
    steps:
      - run:
          name: Install asdf
          command: |
            if [[ -e ~/.asdf ]]; then
              echo "asdf already installed"
            else
              git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.9.0
            fi
            echo >${BASH_ENV} 'source ~/.asdf/asdf.sh'

jobs:
  rs-generate:
    executor: go
    working_directory: ~/src/rolling-shutter
    steps:
      - checkout:
          path: ~/src
      - restore_cache:
          keys:
            - rs-generate-v9-{{ checksum "go.sum" }}-{{checksum "go.mod"}}
      - install-asdf
      - run:
          name: "Install asdf plugins"
          command: |
            asdf plugin add protoc || true
            asdf plugin add nodejs || true
            asdf plugin add sqlc https://github.com/schmir/asdf-sqlc.git || true
      - run:
          name: "Install asdf managed executable"
          command: |
            asdf install protoc
            asdf install nodejs
            asdf install sqlc
      - node/install-packages:
          app-dir: ~/src/contracts
          override-ci-command: npm install
      - run: make install-protoc-gen-go install-abigen install-oapi-codegen
      - run:
          name: Remove generated files
          command: |
            find . -name '*.gen.go' |xargs rm
      - run: make generate
      - save_cache:
          key: rs-generate-v9-{{ checksum "go.sum" }}-{{checksum "go.mod"}}
          paths:
            - "~/go/pkg/mod"
            - "~/.cache/go-build"
            - ~/.asdf
      - run: git diff --exit-code

  rs-build:
    parameters:
      go-version:
        type: string
    executor: << parameters.go-version >>
    working_directory: ~/src/rolling-shutter
    steps:
      - checkout:
          path: ~/src
      - restore_cache:
          keys:
            - go-mod-v3-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - run: go get -d ./...
      - save_cache:
          key: go-mod-v3-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
          paths:
            - ~/go/pkg/
      - restore_cache:
          keys:
            - rs-build-<< parameters.go-version >>-v3-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - run: make build wasm
      - run:
          name: "Run unit tests with gotestsum"
          command: |
            mkdir -p report/unit report/integration
            gotestsum -f standard-verbose --junitfile report/unit/tests.xml -- -short ./...
      - run:
          name: Wait for PostgreSQL
          command: |
            if [[ -v ROLLING_SHUTTER_TESTDB_URL ]]; then
              dockerize -wait tcp://localhost:5432 -timeout 1m
            fi
      - run:
          name: "Run integration tests with gotestsum"
          command: |
            gotestsum -f standard-verbose --junitfile report/integration/tests.xml -- -p 1 -run Integration -count=1 ./...
      - store_test_results:
          path: report
      - save_cache:
          key: rs-build-<< parameters.go-version >>-v3-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
          paths:
            - "~/.cache/go-build"

  publish-release:
    executor: go
    working_directory: ~/src/rolling-shutter
    steps:
      - checkout:
          path: ~/src
      - restore_cache:
          keys:
            - rs-build-go-integration-v3-{{ checksum "go.sum" }}
      - run: env VERSION=${CIRCLE_TAG} ./build-release
      - run: go install github.com/tcnksm/ghr@v0.13.0
      - attach_workspace:
          at: ~/share
      - run:
          name: Upload binaries and combined.json
          command: |
            cp ~/share/combined.json bin/
            ghr ${CIRCLE_TAG} bin/

  rs-lint:
    executor: go
    working_directory: ~/src/rolling-shutter
    steps:
      - checkout:
          path: ~/src
      - restore_cache:
          keys:
            - go-mod-v3-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - restore_cache:
          keys:
            - rs-lint-v4-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
      - install-asdf
      - run:
          name: "Install golangci-lint"
          command: |
            asdf plugin add golangci-lint || true
            asdf install golangci-lint
      - run: |
          make lint-changes
      - save_cache:
          key: rs-lint-v4-{{ checksum "go.sum" }}-{{ checksum "go.mod" }}
          paths:
            - "~/.cache/go-build"
            - "~/.cache/golangci-lint"
            - "~/.asdf"
workflows:
  rolling-shutter:
    jobs:
      - rs-generate:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - rs-build:
          matrix:
            parameters:
              go-version: [go-integration, go116]
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - publish-release:
          requires:
            - rs-build
          context:
            - upload-release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - rs-lint:
          filters:
            branches:
              ignore: /main/
